@import './vars';

/* Font mixins. Changes here affect *alL* apps */

@mixin font-light() {
  font-family: 'Fira Sans', sans-serif;
  font-weight: 300;
  font-style: normal;
}

@mixin font-light-italic() {
  font-family: 'Fira Sans', sans-serif;
  font-weight: 300;
  font-style: normal;
}

@mixin font-regular() {
  font-family: 'Fira Sans', sans-serif;
  font-weight: 400;
  font-style: normal;
}

@mixin font-regular-italic() {
  font-family: 'Fira Sans', sans-serif;
  font-weight: 400;
  font-style: italic;
}

@mixin font-medium() {
  font-family: 'Fira Sans', sans-serif;
  font-weight: 500;
  font-style: normal;
}

@mixin font-medium-italic() {
  font-family: 'Fira Sans', sans-serif;
  font-weight: 500;
  font-style: italic;
}

@mixin font-bold() {
  font-family: 'Fira Sans', sans-serif;
  font-weight: 600;
  font-style: normal;
}

@mixin font-bold-italic() {
  font-family: 'Fira Sans', sans-serif;
  font-weight: 600;
  font-style: italic;
}

/* Shared mixins. Bear in mind changes here impact *all* apps. */

@mixin focus() {
  border-color: $focus-outline-color;
  box-shadow: 0 0 5px 0 $focus-outline-color;
  outline: none;
}

@mixin disabled($background) {
  @if lightness($background) > 80 {
    background: adjust-hue(darken(desaturate($background, 85%), 13%), 6);
  }

  @else {
    background: adjust-hue(lighten(desaturate($background, 85%), 13%), 6);
  }

  cursor: not-allowed;
}

/* stylelint-disable at-rule-empty-line-before, media-feature-no-missing-punctuation  */
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media #{map-get($breakpoints, $breakpoint)} {
      @content;
    }
  } @else {
    @warn 'Breakpoint `#{$breakpoint}` not found in `$breakpoints` map.';
  }
}

/* Arrows */
$default-arrow-margin: 3px;
@mixin arrow($margin: $default-arrow-margin) {
  background: url('~amo/img/icons/arrow-link-color.svg') 50% 50% no-repeat;
  border-radius: $border-radius-m;
  content: '';
  display: inline-block;
  height: 16px;
  margin-right: -$margin * 2;
  position: relative;
  right: -$margin;
  top: 4px;
  width: 22px;

  [dir=rtl] & {
    left: -$margin;
    margin-left: -$margin * 2;
    margin-right: 0;
    right: auto;
    transform: rotate(180deg);
  }
}

@mixin arrow-down($margin: $default-arrow-margin) {
  @include arrow($margin);

  transform: rotate(90deg);

  [dir=rtl] & {
    transform: rotate(270deg);
  }
}

// This alias to arrow (which is the same as arrow-next) makes it easier to
// differentiate two arrows when both arrow-next and arrow-previous are used
// near each other.
@mixin arrow-next($margin: $default-arrow-margin) {
  @include arrow($margin);
}

@mixin arrow-previous($margin: $default-arrow-margin) {
  @include arrow($margin);

  left: -$margin;
  margin-left: -$margin * 2;
  margin-right: 0;
  right: auto;
  transform: rotate(180deg);

  [dir=rtl] & {
    left: auto;
    margin-left: 0;
    margin-right: -$margin * 2;
    right: -$margin;
    transform: none;
  }
}

@mixin arrow-up($margin: $default-arrow-margin) {
  @include arrow($margin);

  transform: rotate(270deg);

  [dir=rtl] & {
    transform: rotate(90deg);
  }
}

@mixin arrow-link-right-aligned() {
  background-image: url('~amo/img/icons/arrow-link-color.svg');
  margin-right: 0;
  position: absolute;
  right: 8px;
  top: 14px;

  [dir=rtl] & {
    left: 8px;
    right: auto;
  }
}

/* Button */
@mixin button(
  $background,
  $background-active: #fff,
  $background-hover: #fff,
  $border-color: transparent,
  $border-radius: $border-radius-s,
  $color: $white
) {
  @include font-regular();

  background: $background;
  border-radius: $border-radius;
  border: 1px solid $border-color;
  display: inline-block;
  margin: 0;
  min-height: 39px;
  padding: 10px 14px 8px;
  text-align: center;
  text-decoration: none;
  text-shadow: 1px 1px 0 transparentize(invert($color), 0.5);
  transition-duration: $transition-short;
  transition-property: background-color border-color;
  vertical-align: middle;

  .Icon {
    @include margin-end(6px);

    height: 16px;
    vertical-align: top;
    width: 16px;
  }

  &.Button--small {
    &,
    &:link {
      font-size: $font-size-s;
      min-height: 27px;
      padding: 4px 10px 2px;
    }

    .Icon {
      @include margin-end(4px);

      height: 14px;
      width: 14px;
    }
  }

  // We frustratingly target :link directly so we need this override.
  &,
  &:link {
    color: $color;
    font-size: $font-size-default;
    font-weight: 400;
  }

  &:hover {
    background: $background-hover;
  }

  &:active,
  &:focus {
    background: $background-active;
  }

  &:focus {
    @include focus();
  }

  &:disabled,
  &.disabled {
    @include disabled($background);
  }

  &.button-start {
    border-bottom-right-radius: 0;
    border-top-right-radius: 0;
  }

  &.button-middle {
    border-radius: 0;
  }

  &.button-end {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
  }

  &.Button--outline-only {
    background: transparent;
    border-color: $background;
    color: $color;

    &:hover {
      border-color: $background-hover;
    }

    &:active,
    &:focus {
      border-color: $background-active;
    }
  }

  &::-moz-focus-inner {
    border: 0;
    padding: 0;
  }
}

@mixin text-align-start() {
  text-align: left;

  [dir=rtl] & {
    text-align: right;
  }
}

@mixin start($pos) {
  left: $pos;
  right: auto;

  [dir=rtl] & {
    left: auto;
    right: $pos;
  }
}

@mixin end($pos) {
  left: auto;
  right: $pos;

  [dir=rtl] & {
    left: $pos;
    right: auto;
  }
}

@mixin margin($top, $end, $bottom, $start) {
  margin: $top $end $bottom $start;

  [dir=rtl] & {
    margin: $top $start $bottom $end;
  }
}

@mixin margin-start($val) {
  [dir=ltr] & {
    margin-left: $val;
  }

  [dir=rtl] & {
    margin-right: $val;
  }
}

@mixin margin-end($val) {
  [dir=ltr] & {
    margin-right: $val;
  }

  [dir=rtl] & {
    margin-left: $val;
  }
}

@mixin padding-start($val) {
  [dir=ltr] & {
    padding-left: $val;
  }

  [dir=rtl] & {
    padding-right: $val;
  }
}

@mixin padding-end($val) {
  [dir=ltr] & {
    padding-right: $val;
  }

  [dir=rtl] & {
    padding-left: $val;
  }
}

@mixin addonSection() {
  background: $base-color;
  padding: 10px 20px;
  overflow: hidden;
}
