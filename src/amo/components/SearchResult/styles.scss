@import '~amo/css/inc/vars';
@import '~core/css/inc/mixins';
@import '~ui/css/vars';

$icon-default-size: 32px;

.SearchResult {
  list-style-type: none;
  margin: 0 0 1px;

  &:hover {
    cursor: pointer;

    .SearchResult-link {
      color: $link-color;
    }
  }
}

.SearchResult-link {
  text-decoration: none;
  word-wrap: anywhere;

  &,
  &:active,
  &:link,
  &:visited {
    color: $text-color-default;
  }

  &:focus,
  &:hover {
    color: $link-color;
  }
}

.SearchResult-result {
  display: flex;
  flex-flow: row wrap;
  margin: 0;
  max-width: $theme-width-default;
  padding: 0;
  width: 100%;
}

.SearchResult-icon-wrapper {
  order: 1;

  .SearchResult--theme & {
    flex-grow: 1;
    margin-bottom: 10px;
    overflow: hidden;
    width: calc(100% + 20px);
  }

  @include respond-to(large) {
    border-radius: $border-radius-default;
  }
}

.SearchResult-icon-wrapper--no-theme-image {
  align-items: center;
  background: #ccc;
  color: $white;
  display: flex;
  font-size: 14px;
  font-weight: normal;
  justify-content: center;
  text-align: center;
  text-shadow: 0 0 1px $black;
}

.SearchResult-icon {
  display: inline-block;
  height: $icon-default-size;
  width: $icon-default-size;

  .SearchResult--theme & {
    border-radius: $border-radius-default;
    display: block;
    height: auto;
    object-fit: cover;
    object-position: top left;
    width: 100%;
  }

  &.SearchResult-icon--loading {
    .SearchResult--theme & {
      height: $icon-default-size;
      width: $icon-default-size;
    }
  }
}

.SearchResult-contents {
  display: flex;
  flex-flow: row wrap;
  flex-grow: 1;
  justify-content: space-between;
  margin: 0 10px;
  order: 1;
  // `width: 0;` allows the users section to expand.
  width: 0;

  .SearchResult--theme & {
    @include respond-to(medium) {
      @include margin-start(0);

      width: 50%;
    }
  }
}

.SearchResult-name {
  @include font-medium();

  align-items: flex-start;
  color: $type-black;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  flex-wrap: wrap;
  font-size: $font-size-m-smaller;
  line-height: 1.2;
  margin: 0;
  padding: 0;
  text-decoration: none;
  width: 100%;
  word-wrap: break-word;

  .RecommendedBadge {
    justify-content: flex-start;
    margin-top: 6px;
  }

  .SearchResult-recommendedBadgeSpacer {
    display: none;
  }

  @include respond-to(extraLarge) {
    flex-direction: row;
    margin-top: 0;

    // Hold up! Before you get bummed about this spacer,
    // consider how it's currently impossible to detect a flex
    // wrapping event in CSS. The spacer exists to solve this
    // wrapping problem: https://github.com/mozilla/addons-frontend/issues/8330
    .SearchResult-recommendedBadgeSpacer {
      display: inline-block;
      width: 8px;
    }

    .RecommendedBadge {
      margin-top: 0;
    }
  }

  .LoadingText {
    margin-bottom: 5px;
  }
}

.SearchResult-summary {
  display: none;

  @include respond-to(medium) {
    color: $type-black;
    display: block;
    flex-grow: 1;
    font-size: $font-size-s;
    font-weight: normal;
    margin: 0;
    max-width: 465px;
    width: 100%;
    word-wrap: break-word;
  }
}

.SearchResult-metadata {
  display: flex;
  flex-flow: row wrap;
  flex-grow: 1;
  width: 100%;
}

.SearchResult-rating {
  @include margin-end(10px);

  display: inline-block;
  width: auto;

  .Rating {
    justify-content: flex-start;
    margin: 0;
  }

  .SearchResult--theme & {
    width: auto;
  }
}

.SearchResult-author {
  display: none;
  word-break: break-all;

  @include respond-to(medium) {
    display: block;
  }
}

.SearchResult-users-icon {
  height: 10px;
  margin-bottom: -1px;
}

.SearchResult-users {
  @include margin-start(39.5px);

  flex-grow: 1;
  order: 3;
  width: 100%;

  @include respond-to(medium) {
    @include margin-start(0);

    flex-grow: 0;
    order: 1;
    width: auto;
  }

  .SearchResult--theme & {
    @include margin-start(7.5px);

    @include respond-to(medium) {
      @include margin-start(-2.5px);
    }
  }
}

.SearchResult--meta-section {
  color: $sub-text-color;
  font-size: $font-size-s;
  font-weight: normal;
  margin: 0;
  padding: 0;
}

.SearchResult-note {
  background-color: transparentize($blue-50, 0.95);
  border-radius: $border-radius-default;
  color: $type-black;
  flex-grow: 1;
  font-weight: normal;
  margin-top: 12px;
  padding: 12px;
  width: 100%;

  @include respond-to(medium) {
    @include margin-start(12px);
  }
}

.SearchResult-note-header {
  margin: 0 0 6px;

  .Icon-comments-blue {
    @include margin-end(12px);
  }
}
