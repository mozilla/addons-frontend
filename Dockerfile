FROM node:10-slim

# Install node_modules into a different directory to avoid npm/npm#9863.
RUN mkdir -p /srv/node
COPY package.json /srv/node/
COPY yarn.lock /srv/node/
WORKDIR /srv/node

# This file has been downloaded from: https://dl.yarnpkg.com/debian/pubkey.gpg
COPY docker/etc/pki/yarnpkg.gpg.key /etc/pki/yarnpkg.gpg.key

RUN buildDeps=' \
    git \
    yarn \
    python \
    build-essential \
    ' && \
    # `apt-transport-https` is required to use https deb repositories
    apt-get update -y && \
    apt-get install -y --no-install-recommends apt-transport-https && \
    # configure Yarn repository, see: https://yarnpkg.com/en/docs/install#linux-tab
    apt-key add /etc/pki/yarnpkg.gpg.key && \
    echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list && \
    # the base image installs yarn, let's be sure we use ours
    rm -f /usr/local/bin/yarn /usr/local/bin/yarnpkg && \
    # install deps
    apt-get update -y && \
    apt-get install -y --no-install-recommends $buildDeps && \
    yarn install --pure-lockfile && \
    # cleanup
    # apt-get purge -y $buildDeps && \
    rm -rf /var/lib/apt/lists/*

COPY . /srv/code/
WORKDIR /srv/code

# The V2 Pipeline expects version.json to be located in /app/
# As a temporary measure symlink to the version.json generated by Circle-CI
RUN mkdir /app && ln -s /srv/code/version.json /app/version.json

# Replace the local node_modules with the ones we installed above.
RUN rm -rf node_modules
RUN ln -s /srv/node/node_modules

ENV SERVER_HOST 0.0.0.0
ENV SERVER_PORT 4000

CMD yarn start
